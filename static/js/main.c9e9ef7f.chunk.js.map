{"version":3,"sources":["components/AddButton.jsx","components/WidgetTitle.jsx","components/ColorPicker.jsx","components/Stopwatch.jsx","components/Countdown.jsx","components/Widget.jsx","components/WidgetList.jsx","App.js","index.js"],"names":["AddButton","className","onClick","props","addWidget","React","Component","WidgetTitle","handleKeyPress","e","keyCode","which","target","blur","style","backgroundColor","this","name","inputName","rows","onKeyDown","onChange","onBlur","value","titleValue","onDelete","width","height","viewBox","fill","xmlns","fillRule","d","ColorPicker","state","color","displayColorPicker","handleColorPickerClose","setState","toggleDisplayColorPicker","colors","triangle","Stopwatch","timerOn","timerStart","timerTime","title","lastIntervalTime","startTimer","Date","now","set","id","timer","setInterval","stopTimer","clearInterval","resetTimer","handleChange","handleColorChange","hex","addTime","milliSecondsToAdd","componentDidMount","a","get","stopwatchState","centiseconds","Math","floor","slice","seconds","minutes","hours","borderColor","deleteWatch","disabled","defaultState","date","displayCountdown","hour","minute","second","isPaused","renderer","maxLength","placeholder","aria-label","readOnly","Countdown","countdownApi","countdownState","handleCountdownInputChange","event","replace","handleSubmit","preventDefault","dayjs","add","toDate","handleStartClick","start","handlePauseClick","pause","handleResetClick","handleUpdate","forceUpdate","handleComplete","Notification","handlePause","handleKeyDown","key","setRef","countdown","getApi","isCompleted","deleteWidget","action","onSubmit","htmlFor","tabIndex","type","ref","onMount","onStart","onPause","onComplete","autoStart","Widget","widget","WidgetList","widgets","map","App","getValue","then","val","console","log","index","length","uuidv4","filteredwidgets","filter","del","window","alert","permission","requestPermission","testCounter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9e9ef7f.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddButton extends React.Component {\n  render() {\n    return (\n      <div className=\"button-list\">\n        <button\n          onClick={() => this.props.addWidget(\"stopwatch\")}\n          className=\"AddButton\"\n        >\n          Add Stopwatch\n        </button>\n        <button\n          onClick={() => this.props.addWidget(\"countdown\")}\n          className=\"AddButton\"\n        >\n          Add Countdown\n        </button>\n      </div>\n    );\n  }\n}\n\nAddButton.propTypes = {\n  addWidget: PropTypes.func.isRequired,\n};\n\nexport default AddButton;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nclass WidgetTitle extends React.Component {\n  handleKeyPress = (e) => {\n    const code = e.keyCode ? e.keyCode : e.which;\n    if (code === 13) {\n      e.target.blur();\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"border-curve--top\" style={{ backgroundColor: this.props.backgroundColor }}>\n        {\" \"}\n        <div\n          className=\"p--sml flex-container--centered\"\n        >\n          <textarea\n            name={this.props.inputName}\n            className=\"title__input\"\n            rows=\"1\"\n            onKeyDown={this.handleKeyPress}\n            onChange={this.props.onChange}\n            onBlur={this.props.onChange}\n            value={this.props.titleValue}\n          ></textarea>\n        </div>\n        <button\n          className=\"close-button\"\n          onClick={this.props.onDelete}\n        >\n          <svg\n            width=\"1em\"\n            height=\"1em\"\n            viewBox=\"0 0 16 16\"\n            className=\"bi bi-x\"\n            fill=\"currentColor\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M11.854 4.146a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708-.708l7-7a.5.5 0 0 1 .708 0z\"\n            />\n            <path\n              fillRule=\"evenodd\"\n              d=\"M4.146 4.146a.5.5 0 0 0 0 .708l7 7a.5.5 0 0 0 .708-.708l-7-7a.5.5 0 0 0-.708 0z\"\n            />\n          </svg>\n        </button>\n      </div>\n    );\n  }\n}\n\nWidgetTitle.propTypes = {\n    backgroundColor: PropTypes.string.isRequired,\n    inputName: PropTypes.string,\n    titleValue: PropTypes.string.isRequired,\n    onDelete: PropTypes.func,\n    onChange: PropTypes.func.isRequired,\n}\n\nexport default WidgetTitle;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TwitterPicker } from \"react-color\";\n\nclass ColorPicker extends React.Component {\n  state = {\n    color: this.props.color,\n    displayColorPicker: this.props.displayColorPicker,\n  };\n\n  handleColorPickerClose = () => {\n    this.setState({ displayColorPicker: false });\n  };\n\n  toggleDisplayColorPicker = () => {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker });\n  };\n\n  render() {\n    return this.state.displayColorPicker ? (\n      <div className=\"full-width flex\">\n        <div className=\"color-selection-button-container\">\n          <button\n            style={{ backgroundColor: this.props.color }}\n            onClick={this.toggleDisplayColorPicker}\n          ></button>\n          <div className=\"picker-container\">\n            <TwitterPicker\n              color={this.props.color}\n              colors={[\n                \"#EA4440\",\n                \"#33055d\",\n                \"#40b8bb\",\n                \"#0F9563\",\n                \"#f77474\",\n                \"#3041AF\",\n              ]}\n              onChange={this.props.onChange}\n              triangle=\"top-right\"\n            />\n          </div>\n\n          <div className=\"cover\" onClick={this.handleColorPickerClose}></div>\n        </div>\n      </div>\n    ) : (\n      <div className=\"full-width flex\">\n        <div className=\"color-selection-button-container\">\n          <button\n            style={{ backgroundColor: this.props.color }}\n            onClick={this.toggleDisplayColorPicker}\n          ></button>\n        </div>\n      </div>\n    );\n  }\n}\n\nColorPicker.propTypes = {\n  color: PropTypes.string.isRequired,\n  displayColorPicker: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default ColorPicker;\n","import React, { Component } from \"react\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport PropTypes from \"prop-types\";\nimport { set, get } from \"idb-keyval\";\nimport ColorPicker from \"./ColorPicker\";\n\nclass Stopwatch extends Component {\n  state = {\n    timerOn: false,\n    timerStart: 0,\n    timerTime: 0,\n    color: \"#ea4440\",\n    title: \"Stopwatch\",\n    lastIntervalTime: 0,\n  };\n\n  startTimer = () => {\n    this.setState(\n      {\n        timerOn: true,\n        timerTime: this.state.timerTime,\n        timerStart: Date.now() - this.state.timerTime,\n      },\n      () => {\n        set(this.props.id, this.state);\n      }\n    );\n    this.timer = setInterval(() => {\n      this.setState(\n        {\n          timerTime: Date.now() - this.state.timerStart,\n          lastIntervalTime: Date.now(),\n        },\n        () => {\n          set(this.props.id, this.state);\n        }\n      );\n    }, 10);\n  };\n\n  stopTimer = () => {\n    this.setState({ timerOn: false }, () => {\n      set(this.props.id, this.state);\n    });\n    clearInterval(this.timer);\n  };\n\n  resetTimer = () => {\n    this.setState(\n      {\n        timerStart: 0,\n        timerTime: 0,\n        lastIntervalTime: 0,\n      },\n      () => {\n        set(this.props.id, this.state);\n      }\n    );\n  };\n\n  handleKeyPress = (e) => {\n    const code = e.keyCode ? e.keyCode : e.which;\n    if (code === 13) {\n      e.target.blur();\n    }\n  };\n\n  handleChange = (e) => {\n    this.setState({ title: e.target.value }, () => {\n      set(this.props.id, this.state);\n    });\n  };\n\n  handleColorChange = (color) => {\n    this.setState(\n      {\n        color: color.hex,\n      },\n      () => {\n        set(this.props.id, this.state);\n      }\n    );\n  };\n\n  addTime = (milliSecondsToAdd) => {\n    if (this.state.timerOn) {\n      this.stopTimer();\n    }\n    this.setState(\n      { timerTime: this.state.timerTime + milliSecondsToAdd },\n      () => {\n        set(this.props.id, this.state);\n      }\n    );\n  };\n\n  componentDidMount = async () => {\n    let stopwatchState = await get(this.props.id);\n    if (!stopwatchState) {\n      stopwatchState = {\n        timerOn: false,\n        timerStart: 0,\n        timerTime: 0,\n        color: \"#ea4440\",\n        title: \"Stopwatch\",\n      };\n      set(this.props.id, stopwatchState);\n    } else {\n      if (stopwatchState.timerOn) {\n        // If timer was on when this watch left, use the last logged interval to add time to watch\n        stopwatchState.timerTime =\n          stopwatchState.timerTime +\n          (Date.now() - stopwatchState.lastIntervalTime);\n        this.startTimer();\n      }\n    }\n    this.setState(stopwatchState);\n  };\n\n  render() {\n    const { timerTime } = this.state;\n    let centiseconds = (\"0\" + (Math.floor(timerTime / 10) % 100)).slice(-2);\n    let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\n    let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\n    let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\n    let style = { borderColor: this.state.color };\n\n    return (\n      <div className=\"flex-container--column widget-container border-curve\" style={style}>\n        <WidgetTitle\n          titleValue={this.state.title}\n          backgroundColor={this.state.color}\n          onDelete={() => this.props.deleteWatch(this.props.id)}\n          onChange={this.handleChange}\n        />\n        <div className=\"p--sml flex-container--column flow--sml\">\n          <div className=\"flex-container--centered\">\n            <div className=\"Stopwatch-display\">\n              <span className=\"monospace text--lrg\">\n                {hours}:{minutes}:{seconds}:{centiseconds}\n              </span>\n            </div>\n          </div>\n\n          <div className=\"button-list\">\n            {this.state.timerOn === false && this.state.timerTime === 0 && (\n              <button onClick={this.startTimer}>\n                <ion-icon name=\"play\"></ion-icon>\n                <span>Start</span>\n              </button>\n            )}\n            {this.state.timerOn === true && (\n              <button onClick={this.stopTimer}>\n                <ion-icon name=\"pause\"></ion-icon>\n                <span>Pause</span>\n              </button>\n            )}\n            {this.state.timerOn === false && this.state.timerTime > 0 && (\n              <button onClick={this.startTimer}>\n                <ion-icon name=\"play\"></ion-icon>\n                <span>Resume</span>\n              </button>\n            )}\n            {this.state.timerOn === false && this.state.timerTime > 0 && (\n              <button onClick={this.resetTimer}>\n                <ion-icon\n                  style={{ \"--ionicon-stroke-width\": \"48px\" }}\n                  name=\"refresh\"\n                ></ion-icon>\n                <span>Reset</span>\n              </button>\n            )}\n          </div>\n          <div className=\"button-list\">\n            <button onClick={() => this.addTime(60000)}>+1:00</button>\n            <button onClick={() => this.addTime(60000 * 15)}>+15:00</button>\n            <button onClick={() => this.addTime(60000 * 60)}>+60:00</button>\n          </div>\n          <div className=\"button-list\">\n            <button\n              disabled={this.state.timerTime < 60000}\n              onClick={() => this.addTime(-60000)}\n            >\n              -1:00\n            </button>\n            <button\n              disabled={this.state.timerTime < 60000 * 15}\n              onClick={() => this.addTime(-60000 * 15)}\n            >\n              -15:00\n            </button>\n            <button\n              disabled={this.state.timerTime < 60000 * 60}\n              onClick={() => this.addTime(-60000 * 60)}\n            >\n              -60:00\n            </button>\n            <ColorPicker\n              color={this.state.color}\n              displayColorPicker={false}\n              onChange={this.handleColorChange}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nStopwatch.propTypes = {\n  id: PropTypes.string.isRequired,\n  deleteWatch: PropTypes.func.isRequired,\n};\n\nexport default Stopwatch;\n","import React from \"react\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport ColorPicker from \"./ColorPicker\";\nimport Proptypes from \"prop-types\";\nimport ReactCountdown from \"react-countdown\";\nimport dayjs from \"dayjs\";\nimport { set, get } from \"idb-keyval\";\n\nconst defaultState = {\n  date: Date.now() + 100,\n  displayCountdown: false,\n  hour: \"\",\n  minute: \"\",\n  second: \"\",\n  title: \"Countdown\",\n  isPaused: false,\n  color: \"#ea4440\",\n};\n\n// Renderer callback with condition\nconst renderer = ({ hours, minutes, seconds }) => {\n  // Render a countdown\n  return (\n    <div className=\"flex-container--centered\">\n      <input\n        value={hours}\n        name=\"hour\"\n        maxLength=\"2\"\n        placeholder=\"HH\"\n        aria-label=\"Hour\"\n        className=\"countdown__input  p--sml\"\n        readOnly\n      />\n      <span className=\"m--sml\">:</span>\n      <input\n        value={minutes}\n        name=\"minute\"\n        maxLength=\"2\"\n        placeholder=\"MM\"\n        aria-label=\"Minute\"\n        className=\"countdown__input p--sml\"\n        readOnly\n      />\n      <span className=\"m--sml\">:</span>\n      <input\n        value={seconds}\n        name=\"second\"\n        maxLength=\"2\"\n        placeholder=\"SS\"\n        aria-label=\"Second\"\n        className=\"countdown__input  p--sml\"\n        readOnly\n      />\n    </div>\n  );\n};\n\nclass Countdown extends React.Component {\n  state = defaultState;\n  countdownApi = null;\n\n  componentDidMount = async () => {\n    let countdownState = await get(this.props.id);\n    if (!countdownState) {\n      countdownState = defaultState;\n      set(this.props.id, countdownState);\n    }\n    this.setState(countdownState);\n  };\n\n  handleCountdownInputChange = (event) => {\n    this.setState(\n      {\n        [event.target.name]: event.target.value.replace(/\\D/, \"\"),\n      },\n      () => {\n        set(this.props.id, this.state);\n      }\n    );\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value }, () => {\n      set(this.props.id, this.state);\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (this.state.value !== 0) {\n      const date = dayjs()\n        .add(this.state.hour, \"h\")\n        .add(this.state.minute, \"m\")\n        .add(this.state.second, \"s\")\n        .toDate();\n      this.setState(\n        {\n          date,\n          displayCountdown: true,\n        },\n        () => {\n          set(this.props.id, this.state);\n        }\n      );\n    }\n  };\n\n  handleStartClick = () => {\n    this.countdownApi && this.countdownApi.start();\n  };\n\n  handlePauseClick = () => {\n    this.countdownApi && this.countdownApi.pause();\n    this.setState({});\n  };\n\n  handleResetClick = () => {\n    this.setState(\n      {\n        date: Date.now(),\n        displayCountdown: false,\n        hour: \"\",\n        minute: \"\",\n        second: \"\",\n      },\n      () => {\n        set(this.props.id, this.state);\n      }\n    );\n  };\n\n  handleUpdate = () => {\n    this.forceUpdate();\n  };\n\n  handleComplete = () => {\n    new Notification(`${this.state.title}`);\n    this.forceUpdate();\n  };\n\n  handlePause = () => {\n    this.forceUpdate();\n  };\n\n  handleKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      this.handleSubmit();\n    }\n  };\n\n  handleColorChange = (color) => {\n    this.setState(\n      {\n        color: color.hex,\n      },\n      () => {\n        set(this.props.id, this.state);\n      }\n    );\n  };\n\n  setRef = (countdown) => {\n    if (countdown) {\n      this.countdownApi = countdown.getApi();\n    }\n  };\n\n  isPaused = () => {\n    return !!(this.countdownApi && this.countdownApi.isPaused());\n  };\n\n  isCompleted = () => {\n    return !!(this.countdownApi && this.countdownApi.isCompleted());\n  };\n\n  render() {\n    return (\n      <div className=\"flex-container--column widget-container border-curve\">\n        <WidgetTitle\n          titleValue={this.state.title}\n          backgroundColor={this.state.color}\n          onDelete={() => this.props.deleteWidget(this.props.id)}\n          onChange={this.handleChange}\n          inputName=\"title\"\n        />\n        {!this.state.displayCountdown && (\n          <div className=\"p--sml\">\n            <form action=\"\" className=\"flow--med\" onSubmit={this.handleSubmit}>\n              <div className=\"flex-container--centered countdown-display\">\n                <input\n                  value={this.state.hour}\n                  name=\"hour\"\n                  onChange={this.handleCountdownInputChange}\n                  maxLength=\"2\"\n                  placeholder=\"HH\"\n                  aria-label=\"Hour\"\n                  className=\"countdown__input  p--sml\"\n                />\n                <span className=\"m--sml\">:</span>\n                <input\n                  value={this.state.minute}\n                  name=\"minute\"\n                  onChange={this.handleCountdownInputChange}\n                  maxLength=\"2\"\n                  placeholder=\"MM\"\n                  aria-label=\"Minute\"\n                  className=\"countdown__input  p--sml\"\n                />\n                <span className=\"m--sml\">:</span>\n                <input\n                  value={this.state.second}\n                  name=\"second\"\n                  onChange={this.handleCountdownInputChange}\n                  maxLength=\"2\"\n                  placeholder=\"SS\"\n                  aria-label=\"Second\"\n                  className=\"countdown__input  p--sml\"\n                />\n              </div>\n              <label\n                htmlFor=\"submit\"\n                className=\"button\"\n                tabIndex=\"0\"\n                onKeyDown={this.handleKeyDown}\n              >\n                <input\n                  id=\"submit\"\n                  type=\"submit\"\n                  value=\"Start\"\n                  className=\"hidden\"\n                />\n                <ion-icon name=\"play\"></ion-icon>\n                <span>Start</span>\n              </label>\n            </form>\n            <div className=\"button-list\">\n              <ColorPicker\n                color={this.state.color}\n                displayColorPicker={false}\n                onChange={this.handleColorChange}\n              />\n            </div>\n          </div>\n        )}\n        {this.state.displayCountdown && (\n          <div className=\"flow--med p--sml\">\n            <ReactCountdown\n              key={this.state.date}\n              ref={this.setRef}\n              date={this.state.date}\n              onMount={this.handleUpdate}\n              onStart={this.handleUpdate}\n              onPause={this.handlePause}\n              onComplete={this.handleComplete}\n              renderer={renderer}\n              autoStart\n            />\n            <div className=\"button-list\">\n              <button\n                type=\"button\"\n                onClick={this.handleStartClick}\n                disabled={!this.isPaused() || this.isCompleted()}\n              >\n                <ion-icon name=\"play\"></ion-icon>\n                <span>Start</span>\n              </button>\n              <button\n                type=\"button\"\n                onClick={this.handlePauseClick}\n                disabled={this.isPaused() || this.isCompleted()}\n              >\n                <ion-icon name=\"pause\"></ion-icon>\n                <span>Pause</span>\n              </button>{\" \"}\n              <button type=\"button\" onClick={this.handleResetClick}>\n                <ion-icon\n                  style={{ \"--ionicon-stroke-width\": \"48px\" }}\n                  name=\"refresh\"\n                ></ion-icon>\n                <span>Reset</span>\n              </button>\n            </div>\n            <div className=\"button-list\">\n              <ColorPicker\n                color={this.state.color}\n                displayColorPicker={false}\n                onChange={this.handleColorChange}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nCountdown.propTypes = {\n  id: Proptypes.string.isRequired,\n  deleteWidget: Proptypes.func.isRequired,\n};\n\nexport default Countdown;\n","import React from \"react\";\nimport Proptypes from \"prop-types\";\nimport Stopwatch from \"./Stopwatch\";\nimport Countdown from \"./Countdown\";\n\nclass Widget extends React.Component {\n  render() {\n    let widget;\n    if (this.props.widget.type === \"stopwatch\") {\n      widget = (\n        <Stopwatch\n          deleteWatch={this.props.deleteWidget}\n          id={this.props.widget.id}\n        />\n      );\n    } else if (this.props.widget.type === \"countdown\") {\n      widget = (\n        <Countdown\n          id={this.props.widget.id}\n          deleteWidget={this.props.deleteWidget}\n        />\n      );\n    } else {\n      widget = <div>?</div>\n    }\n    return widget;\n  }\n}\n\nWidget.propTypes = {\n  widget: Proptypes.object.isRequired,\n  deleteWidget: Proptypes.func.isRequired\n};\n\nexport default Widget;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AddButton from \"./AddButton\";\nimport Widget from \"./Widget\";\n\nclass WidgetList extends React.Component {\n  render() {\n    const widgets = this.props.widgets.map((widget) => {\n      return (\n        <li key={widget.id}>\n          <Widget widget={widget} deleteWidget={this.props.deleteWidget} />\n        </li>\n      );\n    });\n    return (\n      <ul className=\"widget-grid p--non m--center\">\n        {widgets}\n        <li key=\"addButton\">\n          <div className=\"placeholder-container\">\n            <AddButton addWidget={this.props.addWidget} />\n          </div>\n        </li>\n      </ul>\n    );\n  }\n}\n\nWidgetList.propTypes = {\n  widgets: PropTypes.array.isRequired,\n  deleteWidget: PropTypes.func.isRequired,\n  addWidget: PropTypes.func.isRequired,\n};\n\nexport default WidgetList;\n","import React from \"react\";\nimport WidgetList from \"./components/WidgetList\";\nimport { set, get, del } from \"idb-keyval\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport \"normalize.css\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    widgets: [],\n  };\n\n  getValue = (key) => {\n    get(key).then((val) => {\n      console.log(val);\n    });\n  };\n\n  addWidget = (type) => {\n    const widgets = [\n      ...this.state.widgets,\n      { index: this.state.widgets.length + 1, id: uuidv4(), type },\n    ];\n    set(\"widgets\", widgets);\n    this.setState({\n      widgets,\n    });\n  };\n\n  deleteWidget = (id) => {\n    let widgets = this.state.widgets;\n    let filteredwidgets = widgets.filter((widget) => widget.id !== id);\n    set(\"widgets\", filteredwidgets);\n    del(id);\n    this.setState({ widgets: filteredwidgets });\n  };\n\n  componentDidMount = async () => {\n    let widgets = await get(\"widgets\");\n    if (!widgets) {\n      widgets = [{ index: 0, id: uuidv4(), type: \"stopwatch\" }];\n    }\n    this.setState({\n      widgets,\n    });\n\n    if (!(\"Notification\" in window)) {\n      alert(\"This browser does not support desktop notification\");\n    }\n\n    if (Notification.permission !== \"denied\") {\n      Notification.requestPermission();\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.testCounter}\n        <header className=\"flex-container--centered\">\n          <h1>WerkWeek</h1>\n        </header>\n        <div>\n          <WidgetList\n            widgets={this.state.widgets}\n            addWidget={this.addWidget}\n            deleteWidget={this.deleteWidget}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  handleChange = (event) => {\n    this.setState({ widgets: event.target.value });\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './Root.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}