{"version":3,"sources":["components/AddButton.jsx","components/WidgetTitle.jsx","resources/palettes.js","components/ColorPicker.jsx","components/Stopwatch.jsx","components/Countdown.jsx","components/Alarm.jsx","components/Widget.jsx","components/WidgetList.jsx","App.js","index.js"],"names":["AddButton","className","onClick","props","addWidget","React","Component","WidgetTitle","state","textAreaClassName","handleKeyPress","e","keyCode","which","target","blur","openNotes","includes","setState","style","backgroundColor","this","name","inputName","rows","onKeyDown","onChange","onBlur","value","titleValue","onDelete","width","height","viewBox","fill","xmlns","fillRule","d","stroke","strokeLinejoin","strokeWidth","strokeLinecap","placeholder","defaultColorPalette","red","light","dark","blue","green","teal","yellow","purple","orange","pink","gray","ColorPicker","color","displayColorPicker","handleColorPickerClose","toggleDisplayColorPicker","type","colors","Object","values","map","triangle","Stopwatch","timerOn","timerStart","timerTime","title","lastIntervalTime","startTimer","Date","now","set","id","timer","setInterval","stopTimer","clearInterval","resetTimer","handleChange","handleColorChange","hex","addTime","milliSecondsToAdd","componentDidMount","a","get","stopwatchState","centiseconds","Math","floor","slice","seconds","minutes","hours","borderColor","deleteWatch","disabled","defaultState","date","displayCountdown","hour","minute","second","isPaused","renderer","maxLength","aria-label","readOnly","Countdown","countdownApi","countdownState","handleCountdownInputChange","event","replace","handleSubmit","preventDefault","dayjs","add","toDate","handleStartClick","start","handlePauseClick","pause","handleResetClick","handleUpdate","forceUpdate","handleComplete","Notification","handlePause","handleKeyDown","key","setRef","countdown","getApi","isCompleted","deleteWidget","action","onSubmit","htmlFor","tabIndex","ref","onMount","onStart","onPause","onComplete","autoStart","options","label","Alarm","selectedOption","alarmState","handleStopClick","handleHourChange","hourValue","parseInt","handleMinuteChange","minuteValue","handleSelectChange","adjustedHour","extend","objectSupport","isBefore","customStyles","container","provided","fontFamily","fontSize","control","border","isFocused","boxShadow","input","indicatorSeparator","dropdownIndicator","singleValue","option","menu","classNamePrefix","styles","isDisabled","Widget","widget","WidgetList","widgets","App","getValue","then","val","console","log","index","length","uuidv4","filteredwidgets","filter","del","window","alert","permission","requestPermission","testCounter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78741242.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddButton extends React.Component {\n  render() {\n    return (\n      <div className=\"button-list\">\n        <button\n          onClick={() => this.props.addWidget(\"stopwatch\")}\n          className=\"m--xsm\"\n        >\n          Add Stopwatch\n        </button>\n        <button\n          onClick={() => this.props.addWidget(\"countdown\")}\n          className=\"m--xsm\"\n        >\n          Add Countdown\n        </button>\n        <button\n          onClick={() => this.props.addWidget(\"alarm\")}\n          className=\"m--xsm\"\n        >\n          Add Alarm\n        </button>\n      </div>\n    );\n  }\n}\n\nAddButton.propTypes = {\n  addWidget: PropTypes.func.isRequired,\n};\n\nexport default AddButton;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass WidgetTitle extends React.Component {\n  state = {\n    textAreaClassName: \"note-container hidden\",\n  };\n\n  handleKeyPress = (e) => {\n    const code = e.keyCode ? e.keyCode : e.which;\n    if (code === 13) {\n      e.target.blur();\n    }\n  };\n\n  openNotes = () => {\n    let { textAreaClassName } = this.state;\n    if (textAreaClassName.includes(\"hidden\")) {\n      textAreaClassName = \"note-container\";\n    } else {\n      textAreaClassName = \"note-container hidden\";\n    }\n    this.setState({ textAreaClassName });\n  };\n\n  render() {\n    return (\n      <div\n        className=\"border-curve--top\"\n        style={{ backgroundColor: this.props.backgroundColor }}\n      >\n        {\" \"}\n        <div className=\"p--sml flex-container--centered\">\n          <textarea\n            name={this.props.inputName}\n            className=\"title__input\"\n            rows=\"1\"\n            onKeyDown={this.handleKeyPress}\n            onChange={this.props.onChange}\n            onBlur={this.props.onChange}\n            value={this.props.titleValue}\n          ></textarea>\n        </div>\n        <div>\n          <button className=\"close-button\" onClick={this.props.onDelete}>\n            <svg\n              width=\"1em\"\n              height=\"1em\"\n              viewBox=\"0 0 16 16\"\n              className=\"bi bi-x\"\n              fill=\"currentColor\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M11.854 4.146a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708-.708l7-7a.5.5 0 0 1 .708 0z\"\n              />\n              <path\n                fillRule=\"evenodd\"\n                d=\"M4.146 4.146a.5.5 0 0 0 0 .708l7 7a.5.5 0 0 0 .708-.708l-7-7a.5.5 0 0 0-.708 0z\"\n              />\n            </svg>\n          </button>\n          <button className=\"note-button\" onClick={this.openNotes}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"ionicon\"\n              viewBox=\"0 0 512 512\"\n              height=\"1em\"\n              width=\"1em\"\n            >\n              <title>Document Text</title>\n              <path\n                d=\"M416 221.25V416a48 48 0 01-48 48H144a48 48 0 01-48-48V96a48 48 0 0148-48h98.75a32 32 0 0122.62 9.37l141.26 141.26a32 32 0 019.37 22.62z\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"32\"\n              />\n              <path\n                d=\"M256 56v120a32 32 0 0032 32h120M176 288h160M176 368h160\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"32\"\n              />\n            </svg>\n          </button>\n          <div className={this.state.textAreaClassName}>\n            <textarea\n              className=\"note-container_textarea\"\n              placeholder=\"Add a note...\"\n            ></textarea>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nWidgetTitle.propTypes = {\n  backgroundColor: PropTypes.string.isRequired,\n  inputName: PropTypes.string,\n  titleValue: PropTypes.string.isRequired,\n  onDelete: PropTypes.func,\n  onChange: PropTypes.func.isRequired,\n  noteContent: PropTypes.string\n};\n\nexport default WidgetTitle;\n","export const defaultColorPalette = {\n  red: { light: \"#ff7675\", dark: \"#DC3632\" },\n  blue: { light: \"#74b9ff\", dark: \"#117ACA\" },\n  green: { light: \"#55efc4\", dark: \"#05856C\" },\n  teal: { light: \"#81ecec\", dark: \"#02A4A0\" },\n  yellow: { light: \"#ffeaa7\", dark: \"#CD8600\" },\n  purple: { light: \"#a29bfe\", dark: \"#6c5ce7\" },\n  orange: { light: \"#fab1a0\", dark: \"#e17055\" },\n  pink: { light: \"#fd79a8\", dark: \"#D13581\" },\n  gray: { light: \"#707070\", dark: \"#343232\" },\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TwitterPicker } from \"react-color\";\nimport { defaultColorPalette } from \"../resources/palettes\";\n\nclass ColorPicker extends React.Component {\n  state = {\n    color: this.props.color,\n    displayColorPicker: this.props.displayColorPicker,\n  };\n\n  handleColorPickerClose = () => {\n    this.setState({ displayColorPicker: false });\n  };\n\n  toggleDisplayColorPicker = () => {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker });\n  };\n\n  render() {\n    return this.state.displayColorPicker ? (\n      <div className=\"color-selection-button-container\">\n        <button\n          type=\"button\"\n          style={{ backgroundColor: this.props.color }}\n          onClick={this.toggleDisplayColorPicker}\n        ></button>\n        <div className=\"picker-container\">\n          <TwitterPicker\n            color={this.props.color}\n            colors={Object.values(defaultColorPalette).map((color) => {\n              return color.dark;\n            })}\n            onChange={this.props.onChange}\n            triangle=\"top-right\"\n          />\n        </div>\n\n        <div className=\"cover\" onClick={this.handleColorPickerClose}></div>\n      </div>\n    ) : (\n      <div className=\"color-selection-button-container\">\n        <button\n          style={{ backgroundColor: this.props.color }}\n          onClick={this.toggleDisplayColorPicker}\n        ></button>\n      </div>\n    );\n  }\n}\n\nColorPicker.propTypes = {\n  color: PropTypes.string.isRequired,\n  displayColorPicker: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default ColorPicker;\n","import React, { Component } from \"react\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport ColorPicker from \"./ColorPicker\";\nimport { defaultColorPalette } from \"../resources/palettes\";\n\nimport PropTypes from \"prop-types\";\nimport { set, get } from \"idb-keyval\";\n\n\nclass Stopwatch extends Component {\n  state = {\n    timerOn: false,\n    timerStart: 0,\n    timerTime: 0,\n    color: defaultColorPalette.red.dark,\n    title: \"Stopwatch\",\n    lastIntervalTime: 0,\n  };\n\n  startTimer = () => {\n    this.setState(\n      {\n        timerOn: true,\n        timerTime: this.state.timerTime,\n        timerStart: Date.now() - this.state.timerTime,\n      },\n      () => {\n        set(this.props.id, this.state);\n      }\n    );\n    this.timer = setInterval(() => {\n      this.setState(\n        {\n          timerTime: Date.now() - this.state.timerStart,\n          lastIntervalTime: Date.now(),\n        },\n        () => {\n          set(this.props.id, this.state);\n        }\n      );\n    }, 10);\n  };\n\n  stopTimer = () => {\n    this.setState({ timerOn: false }, () => {\n      set(this.props.id, this.state);\n    });\n    clearInterval(this.timer);\n  };\n\n  resetTimer = () => {\n    this.setState(\n      {\n        timerStart: 0,\n        timerTime: 0,\n        lastIntervalTime: 0,\n      },\n      () => {\n        set(this.props.id, this.state);\n      }\n    );\n  };\n\n  handleKeyPress = (e) => {\n    const code = e.keyCode ? e.keyCode : e.which;\n    if (code === 13) {\n      e.target.blur();\n    }\n  };\n\n  handleChange = (e) => {\n    this.setState({ title: e.target.value }, () => {\n      set(this.props.id, this.state);\n    });\n  };\n\n  handleColorChange = (color) => {\n    this.setState(\n      {\n        color: color.hex,\n      },\n      () => {\n        set(this.props.id, this.state);\n      }\n    );\n  };\n\n  addTime = (milliSecondsToAdd) => {\n    if (this.state.timerOn) {\n      this.stopTimer();\n    }\n    this.setState(\n      { timerTime: this.state.timerTime + milliSecondsToAdd },\n      () => {\n        set(this.props.id, this.state);\n      }\n    );\n  };\n\n  componentDidMount = async () => {\n    let stopwatchState = await get(this.props.id);\n    if (!stopwatchState) {\n      stopwatchState = {\n        timerOn: false,\n        timerStart: 0,\n        timerTime: 0,\n        color: defaultColorPalette.red.dark,\n        title: \"Stopwatch\",\n      };\n      set(this.props.id, stopwatchState);\n    } else {\n      if (stopwatchState.timerOn) {\n        // If timer was on when this watch left, use the last logged interval to add time to watch\n        stopwatchState.timerTime =\n          stopwatchState.timerTime +\n          (Date.now() - stopwatchState.lastIntervalTime);\n        this.startTimer();\n      }\n    }\n    this.setState(stopwatchState);\n  };\n\n  render() {\n    const { timerTime } = this.state;\n    let centiseconds = (\"0\" + (Math.floor(timerTime / 10) % 100)).slice(-2);\n    let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\n    let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\n    let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\n    let style = { borderColor: this.state.color };\n\n    return (\n      <div\n        className=\"flex-container--column widget-container border-curve\"\n        style={style}\n      >\n        <WidgetTitle\n          titleValue={this.state.title}\n          backgroundColor={this.state.color}\n          onDelete={() => this.props.deleteWatch(this.props.id)}\n          onChange={this.handleChange}\n          inputName=\"title\"\n        />\n        <div className=\"p--sml flex-container--column flow--sml\">\n          <div className=\"flex-container--centered\">\n            <div className=\"Stopwatch-display\">\n              <span className=\"monospace text--lrg\">\n                {hours}:{minutes}:{seconds}:{centiseconds}\n              </span>\n            </div>\n          </div>\n\n          <div className=\"button-list\">\n            {this.state.timerOn === false && this.state.timerTime === 0 && (\n              <button onClick={this.startTimer}>\n                <ion-icon name=\"play\"></ion-icon>\n                <span>Start</span>\n              </button>\n            )}\n            {this.state.timerOn === true && (\n              <button onClick={this.stopTimer}>\n                <ion-icon name=\"pause\"></ion-icon>\n                <span>Pause</span>\n              </button>\n            )}\n            {this.state.timerOn === false && this.state.timerTime > 0 && (\n              <button onClick={this.startTimer}>\n                <ion-icon name=\"play\"></ion-icon>\n                <span>Resume</span>\n              </button>\n            )}\n            {this.state.timerOn === false && this.state.timerTime > 0 && (\n              <button onClick={this.resetTimer}>\n                <ion-icon\n                  style={{ \"--ionicon-stroke-width\": \"48px\" }}\n                  name=\"refresh\"\n                ></ion-icon>\n                <span>Reset</span>\n              </button>\n            )}\n          </div>\n          <div className=\"button-list\">\n            <button className=\"monospace\" onClick={() => this.addTime(60000)}>\n              +1:00\n            </button>\n            <button\n              className=\"monospace\"\n              onClick={() => this.addTime(60000 * 15)}\n            >\n              +15:00\n            </button>\n            <button\n              className=\"monospace\"\n              onClick={() => this.addTime(60000 * 60)}\n            >\n              +60:00\n            </button>\n          </div>\n          <div className=\"button-list flex-container\">\n            <button\n              className=\"monospace\"\n              disabled={this.state.timerTime < 60000}\n              onClick={() => this.addTime(-60000)}\n            >\n              -1:00\n            </button>\n            <button\n              className=\"monospace\"\n              disabled={this.state.timerTime < 60000 * 15}\n              onClick={() => this.addTime(-60000 * 15)}\n            >\n              -15:00\n            </button>\n            <button\n              className=\"monospace\"\n              disabled={this.state.timerTime < 60000 * 60}\n              onClick={() => this.addTime(-60000 * 60)}\n            >\n              -60:00\n            </button>\n            <ColorPicker\n              color={this.state.color}\n              displayColorPicker={false}\n              onChange={this.handleColorChange}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nStopwatch.propTypes = {\n  id: PropTypes.string.isRequired,\n  deleteWatch: PropTypes.func.isRequired,\n};\n\nexport default Stopwatch;\n","import React from \"react\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport ColorPicker from \"./ColorPicker\";\nimport { defaultColorPalette } from \"../resources/palettes\";\n\nimport Proptypes from \"prop-types\";\nimport ReactCountdown from \"react-countdown\";\nimport dayjs from \"dayjs\";\nimport { set, get } from \"idb-keyval\";\n\nconst defaultState = {\n  date: Date.now() + 100,\n  displayCountdown: false,\n  hour: \"\",\n  minute: \"\",\n  second: \"\",\n  title: \"Countdown\",\n  isPaused: false,\n  color: defaultColorPalette.teal.dark,\n};\n\n// Renderer callback with condition\nconst renderer = ({ hours, minutes, seconds }) => {\n  // Render a countdown\n  return (\n    <div className=\"flex-container--centered\">\n      <input\n        value={hours}\n        name=\"hour\"\n        maxLength=\"2\"\n        placeholder=\"HH\"\n        aria-label=\"Hour\"\n        className=\"countdown__input  p--sml\"\n        readOnly\n      />\n      <span className=\"m--sml\">:</span>\n      <input\n        value={minutes}\n        name=\"minute\"\n        maxLength=\"2\"\n        placeholder=\"MM\"\n        aria-label=\"Minute\"\n        className=\"countdown__input p--sml\"\n        readOnly\n      />\n      <span className=\"m--sml\">:</span>\n      <input\n        value={seconds}\n        name=\"second\"\n        maxLength=\"2\"\n        placeholder=\"SS\"\n        aria-label=\"Second\"\n        className=\"countdown__input  p--sml\"\n        readOnly\n      />\n    </div>\n  );\n};\n\nclass Countdown extends React.Component {\n  state = defaultState;\n  countdownApi = null;\n\n  componentDidMount = async () => {\n    let countdownState = await get(this.props.id);\n    if (!countdownState) {\n      countdownState = defaultState;\n      set(this.props.id, countdownState);\n    }\n    this.setState(countdownState);\n  };\n\n  handleCountdownInputChange = (event) => {\n    this.setState(\n      {\n        [event.target.name]: event.target.value.replace(/\\D/, \"\"),\n      },\n      () => {\n        set(this.props.id, this.state);\n      }\n    );\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value }, () => {\n      set(this.props.id, this.state);\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (this.state.value !== 0) {\n      const date = dayjs()\n        .add(this.state.hour, \"h\")\n        .add(this.state.minute, \"m\")\n        .add(this.state.second, \"s\")\n        .toDate();\n      this.setState(\n        {\n          date,\n          displayCountdown: true,\n        },\n        () => {\n          set(this.props.id, this.state);\n        }\n      );\n    }\n  };\n\n  handleStartClick = () => {\n    this.countdownApi && this.countdownApi.start();\n  };\n\n  handlePauseClick = () => {\n    this.countdownApi && this.countdownApi.pause();\n    this.setState({});\n  };\n\n  handleResetClick = () => {\n    this.setState(\n      {\n        date: Date.now(),\n        displayCountdown: false,\n        hour: \"\",\n        minute: \"\",\n        second: \"\",\n      },\n      () => {\n        set(this.props.id, this.state);\n      }\n    );\n  };\n\n  handleUpdate = () => {\n    this.forceUpdate();\n  };\n\n  handleComplete = () => {\n    new Notification(`${this.state.title}`);\n    this.forceUpdate();\n  };\n\n  handlePause = () => {\n    this.forceUpdate();\n  };\n\n  handleKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      this.handleSubmit();\n    }\n  };\n\n  handleColorChange = (color) => {\n    this.setState(\n      {\n        color: color.hex,\n      },\n      () => {\n        set(this.props.id, this.state);\n      }\n    );\n  };\n\n  setRef = (countdown) => {\n    if (countdown) {\n      this.countdownApi = countdown.getApi();\n    }\n  };\n\n  isPaused = () => {\n    return !!(this.countdownApi && this.countdownApi.isPaused());\n  };\n\n  isCompleted = () => {\n    return !!(this.countdownApi && this.countdownApi.isCompleted());\n  };\n\n  render() {\n    return (\n      <div className=\"flex-container--column widget-container border-curve\">\n        <WidgetTitle\n          titleValue={this.state.title}\n          backgroundColor={this.state.color}\n          onDelete={() => this.props.deleteWidget(this.props.id)}\n          onChange={this.handleChange}\n          inputName=\"title\"\n        />\n        {!this.state.displayCountdown && (\n          <div className=\"p--sml\">\n            <form action=\"\" className=\"flow--med\" onSubmit={this.handleSubmit}>\n              <div className=\"flex-container--centered countdown-display\">\n                <input\n                  value={this.state.hour}\n                  name=\"hour\"\n                  onChange={this.handleCountdownInputChange}\n                  maxLength=\"2\"\n                  placeholder=\"HH\"\n                  aria-label=\"Hour\"\n                  className=\"countdown__input  p--sml\"\n                />\n                <span className=\"m--sml\">:</span>\n                <input\n                  value={this.state.minute}\n                  name=\"minute\"\n                  onChange={this.handleCountdownInputChange}\n                  maxLength=\"2\"\n                  placeholder=\"MM\"\n                  aria-label=\"Minute\"\n                  className=\"countdown__input  p--sml\"\n                />\n                <span className=\"m--sml\">:</span>\n                <input\n                  value={this.state.second}\n                  name=\"second\"\n                  onChange={this.handleCountdownInputChange}\n                  maxLength=\"2\"\n                  placeholder=\"SS\"\n                  aria-label=\"Second\"\n                  className=\"countdown__input  p--sml\"\n                />\n              </div>\n              <label\n                htmlFor=\"submit\"\n                className=\"button\"\n                tabIndex=\"0\"\n                onKeyDown={this.handleKeyDown}\n              >\n                <input\n                  id=\"submit\"\n                  type=\"submit\"\n                  value=\"Start\"\n                  className=\"hidden\"\n                />\n                <ion-icon name=\"play\"></ion-icon>\n                <span>Start</span>\n              </label>\n            </form>\n            <div className=\"flex-container\">\n              <ColorPicker\n                color={this.state.color}\n                displayColorPicker={false}\n                onChange={this.handleColorChange}\n              />\n            </div>\n          </div>\n        )}\n        {this.state.displayCountdown && (\n          <div className=\"flow--med p--sml\">\n            <ReactCountdown\n              key={this.state.date}\n              ref={this.setRef}\n              date={this.state.date}\n              onMount={this.handleUpdate}\n              onStart={this.handleUpdate}\n              onPause={this.handlePause}\n              onComplete={this.handleComplete}\n              renderer={renderer}\n              autoStart\n            />\n            <div className=\"button-list\">\n              <button\n                type=\"button\"\n                onClick={this.handleStartClick}\n                disabled={!this.isPaused() || this.isCompleted()}\n              >\n                <ion-icon name=\"play\"></ion-icon>\n                <span>Start</span>\n              </button>\n              <button\n                type=\"button\"\n                onClick={this.handlePauseClick}\n                disabled={this.isPaused() || this.isCompleted()}\n              >\n                <ion-icon name=\"pause\"></ion-icon>\n                <span>Pause</span>\n              </button>{\" \"}\n              <button type=\"button\" onClick={this.handleResetClick}>\n                <ion-icon\n                  style={{ \"--ionicon-stroke-width\": \"48px\" }}\n                  name=\"refresh\"\n                ></ion-icon>\n                <span>Reset</span>\n              </button>\n            </div>\n            <div className=\"flex-container\">\n              <ColorPicker\n                color={this.state.color}\n                displayColorPicker={false}\n                onChange={this.handleColorChange}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nCountdown.propTypes = {\n  id: Proptypes.string.isRequired,\n  deleteWidget: Proptypes.func.isRequired,\n};\n\nexport default Countdown;\n","import React from \"react\";\nimport { defaultColorPalette } from \"../resources/palettes\";\nimport WidgetTitle from \"./WidgetTitle\";\nimport ColorPicker from \"./ColorPicker\";\n\nimport PropTypes from \"prop-types\";\nimport Select from \"react-select\";\nimport { get, set } from \"idb-keyval\";\nimport ReactCountdown from \"react-countdown\";\nimport dayjs from \"dayjs\";\nimport objectSupport from \"dayjs/plugin/objectSupport\";\n\nconst options = [\n  { value: \"am\", label: \"AM\" },\n  { value: \"pm\", label: \"PM\" },\n];\n\nconst renderer = ({ hours, minutes, seconds }) => {\n  // Render a countdown\n  return (\n    <div className=\"flex-container--centered\">\n      <span name=\"hour\" aria-label=\"Hour\" className=\"monospace italic\">\n        {hours}\n      </span>\n      <span className=\"m--sml\">:</span>\n      <span name=\"minute\" aria-label=\"Minute\" className=\"monospace italic\">\n        {minutes}\n      </span>\n      <span className=\"m--sml\">:</span>\n      <span name=\"second\" aria-label=\"Second\" className=\"monospace italic\">\n        {seconds}\n      </span>\n    </div>\n  );\n};\n\nclass Alarm extends React.Component {\n  state = {\n    title: \"Alarm\",\n    color: defaultColorPalette.blue.dark,\n    selectedOption: { value: \"am\", label: \"AM\" },\n    hour: \"\",\n    minute: \"\",\n    date: Date.now(),\n  };\n  countdownApi = null;\n\n  componentDidMount = async () => {\n    let alarmState = await get(this.props.id);\n    if (alarmState) {\n      this.setState(alarmState);\n    }\n  };\n\n  handleStopClick = () => {\n    this.setState(\n      {\n        displayCountdown: false,\n      },\n      () => {\n        set(this.props.id, this.state);\n      }\n    );\n  };\n\n  handleUpdate = () => {\n    this.forceUpdate();\n  };\n\n  handleComplete = () => {\n    new Notification(`${this.state.title}`);\n    this.setState({ displayCountdown: false });\n  };\n\n  setRef = (countdown) => {\n    if (countdown) {\n      this.countdownApi = countdown.getApi();\n    }\n  };\n\n  isPaused = () => {\n    return !!(this.countdownApi && this.countdownApi.isPaused());\n  };\n\n  isCompleted = () => {\n    return !!(this.countdownApi && this.countdownApi.isCompleted());\n  };\n\n  handleChange = (e) => {\n    this.setState({ title: e.target.value }, () => {\n      set(this.props.id, this.state);\n    });\n  };\n\n  handleColorChange = (color) => {\n    this.setState(\n      {\n        color: color.hex,\n      },\n      () => {\n        set(this.props.id, this.state);\n      }\n    );\n  };\n\n  handleHourChange = (e) => {\n    const hour = e.target.value.replace(/\\D/, \"\");\n    const hourValue = parseInt(hour);\n    if ((hourValue >= 0 && hourValue <= 12) || !hour) {\n      this.setState({ hour }, () => set(this.props.id, this.state));\n    }\n  };\n\n  handleMinuteChange = (e) => {\n    const minute = e.target.value.replace(/\\D/, \"\");\n    const minuteValue = parseInt(minute);\n    if ((minuteValue >= 0 && minuteValue <= 60) || !minute) {\n      this.setState({ minute }, () => set(this.props.id, this.state));\n    }\n  };\n\n  handleSelectChange = (selectedOption) => {\n    this.setState({ selectedOption });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    dayjs.extend(objectSupport);\n    let adjustedHour;\n    if (this.state.hour === \"12\") {\n      adjustedHour = this.state.selectedOption.value === \"am\" ? 0 : 12;\n    } else {\n      adjustedHour =\n        this.state.selectedOption.value === \"am\"\n          ? this.state.hour\n          : `${parseInt(this.state.hour) + 12}`;\n    }\n    let date = dayjs({\n      hour: adjustedHour,\n      minute: this.state.minute,\n      a: this.state.selectedOption.value,\n    });\n    if (date.isBefore(dayjs())) {\n      date = date.add(1, \"day\");\n    }\n    this.setState({ date: date.toDate(), displayCountdown: true });\n  };\n\n  render() {\n    const { selectedOption } = this.state;\n    const customStyles = {\n      container: (provided) => ({\n        ...provided,\n        height: \"100%\",\n        fontFamily: \"Fira Sans\",\n        fontSize: \"2rem\",\n      }),\n      control: (provided, state) => ({\n        ...provided,\n        height: \"100%\",\n        backgroundColor: \"inherit\",\n        border: \"none\",\n        borderColor: state.isFocused ? this.state.color : \"inherit\",\n        boxShadow: state.isFocused ? `0 0 3px ${this.state.color}` : \"none\",\n      }),\n      input: (provided) => ({\n        ...provided,\n        height: \"inherit\",\n      }),\n      indicatorSeparator: (provided) => ({\n        ...provided,\n        backgroundColor: \"#989696\",\n        width: \"2px\",\n      }),\n      dropdownIndicator: (provided) => ({\n        ...provided,\n        color: \"#989696\",\n      }),\n      singleValue: (provided) => ({\n        ...provided,\n        color: \"var(--text-primary)\",\n      }),\n      option: (provided, state) => ({\n        ...provided,\n        backgroundColor: state.isFocused\n          ? \"var(--input-background)\"\n          : \"var(--widgetBackground)\",\n        color: \"var(--text-primary)\",\n      }),\n      menu: (provided) => ({\n        ...provided,\n        backgroundColor: \"var(--widgetBackground)\",\n      }),\n    };\n    return (\n      <div className=\"flex-container--column widget-container border-curve\">\n        <WidgetTitle\n          titleValue={this.state.title}\n          backgroundColor={this.state.color}\n          onDelete={() => this.props.deleteWidget(this.props.id)}\n          onChange={this.handleChange}\n        />\n        <div className=\"p--sml\">\n          <form onSubmit={this.handleSubmit} className=\"flow--med\">\n            <div className=\"flex-container--centered countdown-display\">\n              <input\n                value={this.state.hour}\n                name=\"hour\"\n                onChange={this.handleHourChange}\n                maxLength=\"2\"\n                placeholder=\"HH\"\n                aria-label=\"Hour\"\n                className=\"countdown__input  p--sml\"\n                readOnly={this.state.displayCountdown}\n              />\n              <span className=\"m--sml\">:</span>\n              <input\n                value={this.state.minute}\n                name=\"minute\"\n                onChange={this.handleMinuteChange}\n                maxLength=\"2\"\n                placeholder=\"MM\"\n                aria-label=\"Minute\"\n                className=\"countdown__input  p--sml\"\n                readOnly={this.state.displayCountdown}\n              />\n              <div className=\"select-container\">\n                <Select\n                  classNamePrefix=\"react-select\"\n                  name=\"selectedOption\"\n                  value={selectedOption}\n                  onChange={this.handleSelectChange}\n                  options={options}\n                  styles={customStyles}\n                  isDisabled={this.state.displayCountdown}\n                />\n              </div>\n            </div>\n            {this.state.displayCountdown && (\n              <div>\n                <ReactCountdown\n                  key={this.state.date}\n                  ref={this.setRef}\n                  date={this.state.date}\n                  onMount={this.handleUpdate}\n                  onStart={this.handleUpdate}\n                  onPause={this.handlePause}\n                  onComplete={this.handleComplete}\n                  renderer={renderer}\n                  autoStart\n                />\n                <div className=\"button-list flex-container\">\n                  <button onClick={this.handleStopClick}>\n                    <ion-icon name=\"stop\"></ion-icon>\n                    <span>Stop</span>\n                  </button>\n                  <ColorPicker\n                    color={this.state.color}\n                    displayColorPicker={false}\n                    onChange={this.handleColorChange}\n                  />\n                </div>\n              </div>\n            )}\n            {!this.state.displayCountdown && (\n              <div>\n                <div className=\"flex-container--centered\">\n                  <span\n                    name=\"hour\"\n                    aria-label=\"Hour\"\n                    className=\"monospace italic\"\n                  >\n                    --{\" \"}\n                  </span>\n                  <span className=\"m--sml\">:</span>\n                  <span\n                    name=\"minute\"\n                    aria-label=\"Minute\"\n                    className=\"monospace italic\"\n                  >\n                    --{\" \"}\n                  </span>\n                  <span className=\"m--sml\">:</span>\n                  <span\n                    name=\"second\"\n                    aria-label=\"Second\"\n                    className=\"monospace italic\"\n                  >\n                    --{\" \"}\n                  </span>\n                </div>\n                <div className=\"button-list flex-container\">\n                  <button type=\"submit\">\n                    <ion-icon name=\"play\"></ion-icon>\n                    <span>Start</span>\n                  </button>\n                  <ColorPicker\n                    color={this.state.color}\n                    displayColorPicker={false}\n                    onChange={this.handleColorChange}\n                  />\n                </div>\n              </div>\n            )}\n          </form>\n          <div className=\"button-list\"></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAlarm.propTypes = {\n  id: PropTypes.string.isRequired,\n  deleteWidget: PropTypes.func.isRequired,\n};\n\nexport default Alarm;\n","import React from \"react\";\nimport Proptypes from \"prop-types\";\nimport Stopwatch from \"./Stopwatch\";\nimport Countdown from \"./Countdown\";\nimport Alarm from \"./Alarm\";\n\nclass Widget extends React.Component {\n  render() {\n    let widget;\n    if (this.props.widget.type === \"stopwatch\") {\n      widget = (\n        <Stopwatch\n          deleteWatch={this.props.deleteWidget}\n          id={this.props.widget.id}\n        />\n      );\n    } else if (this.props.widget.type === \"countdown\") {\n      widget = (\n        <Countdown\n          id={this.props.widget.id}\n          deleteWidget={this.props.deleteWidget}\n        />\n      );\n    } else if (this.props.widget.type === \"alarm\") {\n      widget = (\n        <Alarm\n          id={this.props.widget.id}\n          deleteWidget={this.props.deleteWidget}\n        />\n      );\n    } else {\n      widget = <div>?</div>;\n    }\n    return widget;\n  }\n}\n\nWidget.propTypes = {\n  widget: Proptypes.object.isRequired,\n  deleteWidget: Proptypes.func.isRequired,\n};\n\nexport default Widget;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AddButton from \"./AddButton\";\nimport Widget from \"./Widget\";\n\nclass WidgetList extends React.Component {\n  render() {\n    const widgets = this.props.widgets.map((widget) => {\n      return (\n        <li key={widget.id}>\n          <Widget widget={widget} deleteWidget={this.props.deleteWidget} />\n        </li>\n      );\n    });\n    return (\n      <ul className=\"widget-grid p--non m--center\">\n        {widgets}\n        <li key=\"addButton\">\n          <div className=\"placeholder-container\">\n            <AddButton addWidget={this.props.addWidget} />\n          </div>\n        </li>\n      </ul>\n    );\n  }\n}\n\nWidgetList.propTypes = {\n  widgets: PropTypes.array.isRequired,\n  deleteWidget: PropTypes.func.isRequired,\n  addWidget: PropTypes.func.isRequired,\n};\n\nexport default WidgetList;\n","import React from \"react\";\nimport WidgetList from \"./components/WidgetList\";\nimport { set, get, del } from \"idb-keyval\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport \"normalize.css\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    widgets: [],\n  };\n\n  getValue = (key) => {\n    get(key).then((val) => {\n      console.log(val);\n    });\n  };\n\n  addWidget = (type) => {\n    const widgets = [\n      ...this.state.widgets,\n      { index: this.state.widgets.length + 1, id: uuidv4(), type },\n    ];\n    set(\"widgets\", widgets);\n    this.setState({\n      widgets,\n    });\n  };\n\n  deleteWidget = (id) => {\n    let widgets = this.state.widgets;\n    let filteredwidgets = widgets.filter((widget) => widget.id !== id);\n    set(\"widgets\", filteredwidgets);\n    del(id);\n    this.setState({ widgets: filteredwidgets });\n  };\n\n  componentDidMount = async () => {\n    let widgets = await get(\"widgets\");\n    if (!widgets) {\n      widgets = [{ index: 0, id: uuidv4(), type: \"stopwatch\" }];\n    }\n    this.setState({\n      widgets,\n    });\n\n    if (!(\"Notification\" in window)) {\n      alert(\"This browser does not support desktop notification\");\n    }\n\n    if (Notification.permission !== \"denied\") {\n      Notification.requestPermission();\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.testCounter}\n        <header className=\"flex-container--centered\">\n          <h1>WerkWeek</h1>\n        </header>\n        <div>\n          <WidgetList\n            widgets={this.state.widgets}\n            addWidget={this.addWidget}\n            deleteWidget={this.deleteWidget}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  handleChange = (event) => {\n    this.setState({ widgets: event.target.value });\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './Root.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}