{"version":3,"sources":["components/AddButton.jsx","components/Stopwatch.jsx","components/Countdown.jsx","components/Widget.jsx","components/WidgetList.jsx","App.js","index.js"],"names":["AddButton","onClick","props","addWidget","className","React","Component","Stopwatch","state","timerOn","timerStart","timerTime","displayColorPicker","color","title","lastIntervalTime","startTimer","setState","Date","now","set","id","timer","setInterval","stopTimer","clearInterval","resetTimer","handleKeyPress","e","keyCode","which","target","blur","handleChange","value","toggleDisplayColorPicker","handleColorChange","hex","handleColorPickerClose","addTime","milliSecondsToAdd","componentDidMount","a","get","stopwatchState","this","centiseconds","Math","floor","slice","seconds","minutes","hours","style","borderColor","colorPickerContainer","marginLeft","backgroundColor","position","colors","onChange","triangle","rows","onKeyDown","onBlur","deleteWatch","width","height","viewBox","fill","xmlns","fillRule","d","name","disabled","defaultState","date","displayCountdown","hour","minute","second","isPaused","renderer","completed","maxLength","placeholder","aria-label","readOnly","Countdown","countdownApi","countdownState","handleCountdownInputChange","event","replace","handleSubmit","preventDefault","dayjs","add","toDate","handleStartClick","start","handlePauseClick","pause","handleResetClick","handleUpdate","forceUpdate","handleComplete","Notification","handlePause","handleKeyDown","key","setRef","countdown","getApi","isCompleted","deleteWidget","action","onSubmit","htmlFor","tabIndex","type","ref","onMount","onStart","onPause","onComplete","autoStart","Widget","widget","WidgetList","widgets","map","App","getValue","then","val","console","log","index","length","uuidv4","filteredwidgets","filter","del","window","alert","permission","requestPermission","testCounter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1dd7f6bf.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddButton extends React.Component {\n  render() {\n    return (\n      <div>\n        <button\n          onClick={() => this.props.addWidget(\"stopwatch\")}\n          className=\"AddButton\"\n        >\n          Add Stopwatch\n        </button>\n        <button\n          onClick={() => this.props.addWidget(\"countdown\")}\n          className=\"AddButton\"\n        >\n          Add Countdown\n        </button>\n      </div>\n    );\n  }\n}\n\nAddButton.propTypes = {\n  addWidget: PropTypes.func.isRequired,\n};\n\nexport default AddButton;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TwitterPicker } from \"react-color\";\nimport { set, get } from \"idb-keyval\";\n\nclass Stopwatch extends Component {\n  state = {\n    timerOn: false,\n    timerStart: 0,\n    timerTime: 0,\n    displayColorPicker: false,\n    color: \"#ea4440\",\n    title: \"Stopwatch\",\n    lastIntervalTime: 0,\n  };\n\n  startTimer = () => {\n    this.setState(\n      {\n        timerOn: true,\n        timerTime: this.state.timerTime,\n        timerStart: Date.now() - this.state.timerTime,\n      },\n      () => {\n        set(this.props.id, this.state);\n      }\n    );\n    this.timer = setInterval(() => {\n      this.setState(\n        {\n          timerTime: Date.now() - this.state.timerStart,\n          lastIntervalTime: Date.now(),\n        },\n        () => {\n          set(this.props.id, this.state);\n        }\n      );\n    }, 10);\n  };\n\n  stopTimer = () => {\n    this.setState({ timerOn: false }, () => {\n      set(this.props.id, this.state);\n    });\n    clearInterval(this.timer);\n  };\n\n  resetTimer = () => {\n    this.setState(\n      {\n        timerStart: 0,\n        timerTime: 0,\n        lastIntervalTime: 0,\n      },\n      () => {\n        set(this.props.id, this.state);\n      }\n    );\n  };\n\n  handleKeyPress = (e) => {\n    const code = e.keyCode ? e.keyCode : e.which;\n    if (code === 13) {\n      e.target.blur();\n    }\n  };\n\n  handleChange = (e) => {\n    this.setState({ title: e.target.value });\n  };\n\n  toggleDisplayColorPicker = () => {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker });\n  };\n\n  handleColorChange = (color) => {\n    this.setState(\n      {\n        color: color.hex,\n      },\n      () => {\n        set(this.props.id, this.state);\n      }\n    );\n  };\n\n  handleColorPickerClose = () => {\n    this.setState({ displayColorPicker: false }, () => {\n      set(this.props.id, this.state);\n    });\n  };\n\n  addTime = (milliSecondsToAdd) => {\n    if (this.state.timerOn) {\n      this.stopTimer();\n    }\n    this.setState(\n      { timerTime: this.state.timerTime + milliSecondsToAdd },\n      () => {\n        set(this.props.id, this.state);\n      }\n    );\n  };\n\n  componentDidMount = async () => {\n    let stopwatchState = await get(this.props.id);\n    if (!stopwatchState) {\n      stopwatchState = {\n        timerOn: false,\n        timerStart: 0,\n        timerTime: 0,\n        displayColorPicker: false,\n        color: \"#ea4440\",\n        title: \"Stopwatch\",\n      };\n      set(this.props.id, stopwatchState);\n    } else {\n      if (stopwatchState.timerOn) {\n        // If timer was on when this watch left, use the last logged interval to add time to watch\n        stopwatchState.timerTime =\n          stopwatchState.timerTime +\n          (Date.now() - stopwatchState.lastIntervalTime);\n        this.startTimer();\n      }\n    }\n    stopwatchState.displayColorPicker = false;\n    this.setState(stopwatchState);\n  };\n\n  render() {\n    const { timerTime } = this.state;\n    let centiseconds = (\"0\" + (Math.floor(timerTime / 10) % 100)).slice(-2);\n    let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\n    let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\n    let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\n    let style = { borderColor: this.state.color };\n    let colorPickerContainer = this.state.displayColorPicker ? (\n      <div style={{ marginLeft: \"auto\" }}>\n        <div className=\"color-selection-button-container\">\n          <button\n            style={{ backgroundColor: this.state.color }}\n            onClick={this.toggleDisplayColorPicker}\n          ></button>\n        </div>\n        <div style={{ position: \"relative\" }}>\n          <div className=\"picker-container\">\n            <TwitterPicker\n              color={this.state.color}\n              colors={[\n                \"#EA4440\",\n                \"#33055d\",\n                \"#40b8bb\",\n                \"#0F9563\",\n                \"#f77474\",\n                \"#3041AF\",\n              ]}\n              onChange={this.handleColorChange}\n              triangle=\"top-right\"\n            />\n          </div>\n          <div className=\"cover\" onClick={this.handleColorPickerClose}></div>\n        </div>\n      </div>\n    ) : (\n      <div className=\"color-selection-button-container\">\n        <button\n          style={{ backgroundColor: this.state.color }}\n          onClick={this.toggleDisplayColorPicker}\n        ></button>\n      </div>\n    );\n    return (\n      <div className=\"Stopwatch\" style={style}>\n        <div\n          className=\"row border-accent\"\n          style={{ backgroundColor: this.state.color }}\n        >\n          <textarea\n            rows=\"1\"\n            onKeyDown={this.handleKeyPress}\n            onChange={this.handleChange}\n            onBlur={() => set(this.props.id, this.state)}\n            value={this.state.title}\n          ></textarea>\n        </div>\n        <button\n          className=\"close-button\"\n          onClick={() => this.props.deleteWatch(this.props.id)}\n        >\n          <svg\n            width=\"1em\"\n            height=\"1em\"\n            viewBox=\"0 0 16 16\"\n            className=\"bi bi-x\"\n            fill=\"currentColor\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M11.854 4.146a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708-.708l7-7a.5.5 0 0 1 .708 0z\"\n            />\n            <path\n              fillRule=\"evenodd\"\n              d=\"M4.146 4.146a.5.5 0 0 0 0 .708l7 7a.5.5 0 0 0 .708-.708l-7-7a.5.5 0 0 0-.708 0z\"\n            />\n          </svg>\n        </button>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"Stopwatch-display\">\n              {hours}:{minutes}:{seconds}:{centiseconds}\n            </div>\n          </div>\n\n          <div className=\"button-list\">\n            {this.state.timerOn === false && this.state.timerTime === 0 && (\n              <button onClick={this.startTimer}>\n                <ion-icon name=\"play\"></ion-icon>\n                <span>Start</span>\n              </button>\n            )}\n            {this.state.timerOn === true && (\n              <button onClick={this.stopTimer}>\n                <ion-icon name=\"pause\"></ion-icon>\n                <span>Pause</span>\n              </button>\n            )}\n            {this.state.timerOn === false && this.state.timerTime > 0 && (\n              <button onClick={this.startTimer}>\n                <ion-icon name=\"play\"></ion-icon>\n                <span>Resume</span>\n              </button>\n            )}\n            {this.state.timerOn === false && this.state.timerTime > 0 && (\n              <button onClick={this.resetTimer}>\n                <ion-icon\n                  style={{ \"--ionicon-stroke-width\": \"48px\" }}\n                  name=\"refresh\"\n                ></ion-icon>\n                <span>Reset</span>\n              </button>\n            )}\n          </div>\n          <div>\n            <div className=\"row button-list\">\n              <button onClick={() => this.addTime(60000)}>+1:00</button>\n              <button onClick={() => this.addTime(60000 * 15)}>+15:00</button>\n              <button onClick={() => this.addTime(60000 * 60)}>+60:00</button>\n            </div>\n            <div className=\"row button-list\">\n              <button\n                disabled={this.state.timerTime < 60000}\n                onClick={() => this.addTime(-60000)}\n              >\n                -1:00\n              </button>\n              <button\n                disabled={this.state.timerTime < 60000 * 15}\n                onClick={() => this.addTime(-60000 * 15)}\n              >\n                -15:00\n              </button>\n              <button\n                disabled={this.state.timerTime < 60000 * 60}\n                onClick={() => this.addTime(-60000 * 60)}\n              >\n                -60:00\n              </button>\n              {colorPickerContainer}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nStopwatch.propTypes = {\n  id: PropTypes.string.isRequired,\n  deleteWatch: PropTypes.func.isRequired,\n};\n\nexport default Stopwatch;\n","import React from \"react\";\nimport Proptypes from \"prop-types\";\nimport ReactCountdown from \"react-countdown\";\nimport dayjs from \"dayjs\";\nimport { set, get } from \"idb-keyval\";\n\nconst defaultState = {\n  date: Date.now() + 100,\n  displayCountdown: false,\n  hour: \"\",\n  minute: \"\",\n  second: \"\",\n  title: \"Countdown\",\n  isPaused: false\n};\n\n// Renderer callback with condition\nconst renderer = ({ hours, minutes, seconds, completed }) => {\n  // Render a countdown\n  return (\n    <div className=\"row countdown-display\">\n      <input\n        value={hours}\n        name=\"hour\"\n        maxLength=\"2\"\n        placeholder=\"HH\"\n        aria-label=\"Hour\"\n        className=\"countdown-input\"\n        readOnly\n      />\n      :\n      <input\n        value={minutes}\n        name=\"minute\"\n        maxLength=\"2\"\n        placeholder=\"MM\"\n        aria-label=\"Minute\"\n        className=\"countdown-input\"\n        readOnly\n      />\n      :\n      <input\n        value={seconds}\n        name=\"second\"\n        maxLength=\"2\"\n        placeholder=\"SS\"\n        aria-label=\"Second\"\n        className=\"countdown-input\"\n        readOnly\n      />\n    </div>\n  );\n};\n\nclass Countdown extends React.Component {\n  countdownApi = null;\n\n  state = defaultState;\n\n  componentDidMount = async () => {\n    let countdownState = await get(this.props.id);\n    if (!countdownState) {\n      countdownState = defaultState;\n      set(this.props.id, countdownState);\n    } \n    this.setState(countdownState);\n  };\n\n  handleCountdownInputChange = (event) => {\n    this.setState(\n      {\n        [event.target.name]: event.target.value.replace(/\\D/, \"\"),\n      },\n      () => {\n        set(this.props.id, this.state);\n      }\n    );\n  };\n\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value }, () => {\n      set(this.props.id, this.state);\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    if (this.state.value !== 0) {\n      const date = dayjs()\n        .add(this.state.hour, \"h\")\n        .add(this.state.minute, \"m\")\n        .add(this.state.second, \"s\")\n        .toDate();\n      this.setState(\n        {\n          date,\n          displayCountdown: true,\n        },\n        () => {\n          set(this.props.id, this.state);\n        }\n      );\n    }\n  };\n\n  handleStartClick = () => {\n    this.countdownApi && this.countdownApi.start();\n  };\n\n  handlePauseClick = () => {\n    this.countdownApi && this.countdownApi.pause();\n    this.setState({})\n  };\n\n  handleResetClick = () => {\n    this.setState(\n      {\n        date: Date.now(),\n        displayCountdown: false,\n        hour: \"\",\n        minute: \"\",\n        second: \"\",\n      },\n      () => {\n        set(this.props.id, this.state);\n      }\n    );\n  };\n\n  handleUpdate = () => {\n    this.forceUpdate();\n  };\n\n  handleComplete = () => {\n    new Notification(`${this.state.title}`);\n    this.forceUpdate();\n  };\n\n  handlePause = () => {\n    this.forceUpdate();\n  };\n\n  handleKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      this.handleSubmit();\n    }\n  };\n\n  handleKeyPress = (e) => {\n    const code = e.keyCode ? e.keyCode : e.which;\n    if (code === 13) {\n      e.target.blur();\n    }\n  };\n\n  setRef = (countdown) => {\n    if (countdown) {\n      this.countdownApi = countdown.getApi();\n    }\n  };\n\n  isPaused = () => {\n    return !!(this.countdownApi && this.countdownApi.isPaused());\n  };\n\n  isCompleted = () => {\n    return !!(this.countdownApi && this.countdownApi.isCompleted());\n  };\n\n  render() {\n    return (\n      <div className=\"countdown\">\n        <div\n          className=\"row border-accent\"\n          style={{ backgroundColor: this.state.color }}\n        >\n          <textarea\n            name=\"title\"\n            rows=\"1\"\n            onKeyDown={this.handleKeyPress}\n            onChange={this.handleChange}\n            onBlur={() => set(this.props.id, this.state)}\n            value={this.state.title}\n          ></textarea>\n        </div>\n        <button\n          className=\"close-button\"\n          onClick={() => this.props.deleteWidget(this.props.id)}\n        >\n          <svg\n            width=\"1em\"\n            height=\"1em\"\n            viewBox=\"0 0 16 16\"\n            className=\"bi bi-x\"\n            fill=\"currentColor\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M11.854 4.146a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708-.708l7-7a.5.5 0 0 1 .708 0z\"\n            />\n            <path\n              fillRule=\"evenodd\"\n              d=\"M4.146 4.146a.5.5 0 0 0 0 .708l7 7a.5.5 0 0 0 .708-.708l-7-7a.5.5 0 0 0-.708 0z\"\n            />\n          </svg>\n        </button>\n        {!this.state.displayCountdown && (\n          <form action=\"\" onSubmit={this.handleSubmit}>\n            <div className=\"row countdown-display\">\n              <input\n                value={this.state.hour}\n                name=\"hour\"\n                onChange={this.handleCountdownInputChange}\n                maxLength=\"2\"\n                placeholder=\"HH\"\n                aria-label=\"Hour\"\n                className=\"countdown-input\"\n              />\n              :\n              <input\n                value={this.state.minute}\n                name=\"minute\"\n                onChange={this.handleCountdownInputChange}\n                maxLength=\"2\"\n                placeholder=\"MM\"\n                aria-label=\"Minute\"\n                className=\"countdown-input\"\n              />\n              :\n              <input\n                value={this.state.second}\n                name=\"second\"\n                onChange={this.handleCountdownInputChange}\n                maxLength=\"2\"\n                placeholder=\"SS\"\n                aria-label=\"Second\"\n                className=\"countdown-input\"\n              />\n            </div>\n            <label\n              htmlFor=\"submit\"\n              className=\"standard-button margin-standard\"\n              tabIndex=\"0\"\n              onKeyDown={this.handleKeyDown}\n            >\n              <input\n                id=\"submit\"\n                type=\"submit\"\n                value=\"Start\"\n                className=\"hidden\"\n              />\n              <ion-icon name=\"play\"></ion-icon>\n              <span>Start</span>\n            </label>\n          </form>\n        )}\n        {this.state.displayCountdown && (\n          <div>\n            <ReactCountdown\n              key={this.state.date}\n              ref={this.setRef}\n              date={this.state.date}\n              onMount={this.handleUpdate}\n              onStart={this.handleUpdate}\n              onPause={this.handlePause}\n              onComplete={this.handleComplete}\n              renderer={renderer}\n              autoStart\n            />\n            <div className=\"row button-list padding-x-small\">\n              <button\n                type=\"button\"\n                onClick={this.handleStartClick}\n                disabled={!this.isPaused() || this.isCompleted()}\n              >\n                <ion-icon name=\"play\"></ion-icon>\n                <span>Start</span>\n              </button>\n              <button\n                type=\"button\"\n                onClick={this.handlePauseClick}\n                disabled={this.isPaused() || this.isCompleted()}\n              >\n                <ion-icon name=\"pause\"></ion-icon>\n                <span>Pause</span>\n              </button>{\" \"}\n              <button type=\"button\" onClick={this.handleResetClick}>\n                <ion-icon\n                  style={{ \"--ionicon-stroke-width\": \"48px\" }}\n                  name=\"refresh\"\n                ></ion-icon>\n                <span>Reset</span>\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nCountdown.propTypes = {\n  id: Proptypes.string.isRequired,\n  deleteWidget: Proptypes.func.isRequired,\n};\n\nexport default Countdown;\n","import React from \"react\";\nimport Proptypes from \"prop-types\";\nimport Stopwatch from \"./Stopwatch\";\nimport Countdown from \"./Countdown\";\n\nclass Widget extends React.Component {\n  render() {\n    let widget;\n    if (this.props.widget.type === \"stopwatch\") {\n      widget = (\n        <Stopwatch\n          deleteWatch={this.props.deleteWidget}\n          id={this.props.widget.id}\n        />\n      );\n    } else if (this.props.widget.type === \"countdown\") {\n      widget = (\n        <Countdown\n          id={this.props.widget.id}\n          deleteWidget={this.props.deleteWidget}\n        />\n      );\n    } else {\n      widget = <div>?</div>\n    }\n    return widget;\n  }\n}\n\nWidget.propTypes = {\n  widget: Proptypes.object.isRequired,\n  deleteWidget: Proptypes.func.isRequired\n};\n\nexport default Widget;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AddButton from \"./AddButton\";\nimport Widget from \"./Widget\";\n\nclass WidgetList extends React.Component {\n  render() {\n    const widgets = this.props.widgets.map((widget) => {\n      return (\n        <li key={widget.id}>\n          <Widget widget={widget} deleteWidget={this.props.deleteWidget} />\n        </li>\n      );\n    });\n    return (\n      <ul>\n        {widgets}\n        <li key=\"addButton\">\n          <div className=\"placeholder-container\">\n            <AddButton addWidget={this.props.addWidget} />\n          </div>\n        </li>\n      </ul>\n    );\n  }\n}\n\nWidgetList.propTypes = {\n  widgets: PropTypes.array.isRequired,\n  deleteWidget: PropTypes.func.isRequired,\n  addWidget: PropTypes.func.isRequired,\n};\n\nexport default WidgetList;\n","import React from \"react\";\nimport WidgetList from \"./components/WidgetList\";\nimport { set, get, del } from \"idb-keyval\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    widgets: [],\n  };\n\n  getValue = (key) => {\n    get(key).then((val) => {\n      console.log(val);\n    });\n  };\n\n  addWidget = (type) => {\n    const widgets = [\n      ...this.state.widgets,\n      { index: this.state.widgets.length + 1, id: uuidv4(), type },\n    ];\n    set(\"widgets\", widgets);\n    this.setState({\n      widgets,\n    });\n  };\n\n  deleteWidget = (id) => {\n    let widgets = this.state.widgets;\n    let filteredwidgets = widgets.filter((widget) => widget.id !== id);\n    set(\"widgets\", filteredwidgets);\n    del(id);\n    this.setState({ widgets: filteredwidgets });\n  };\n\n  componentDidMount = async () => {\n    let widgets = await get(\"widgets\");\n    if (!widgets) {\n      widgets = [{ index: 0, id: uuidv4(), type: \"stopwatch\" }];\n    }\n    this.setState({\n      widgets,\n    });\n\n    // Let's check if the browser supports notifications\n    if (!(\"Notification\" in window)) {\n      alert(\"This browser does not support desktop notification\");\n    }\n\n    if (Notification.permission !== \"denied\") {\n      Notification.requestPermission();\n    }\n\n    // At last, if the user has denied notifications, and you\n    // want to be respectful there is no need to bother them any more.\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.testCounter}\n        <header>\n          <h1>WerkWeek</h1>\n        </header>\n        <div>\n          <WidgetList\n            widgets={this.state.widgets}\n            addWidget={this.addWidget}\n            deleteWidget={this.deleteWidget}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  handleChange = (event) => {\n    this.setState({ widgets: event.target.value });\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './Root.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}